# See https://mozilla.github.io/server-side-tls/ssl-config-generator/
server {
  listen {{ public_http_port }};
  server_name {{ ep_public_hostname }} www.{{ ep_public_hostname }};
  return 301 https://{{ ep_public_hostname }}$request_uri;
}

server {
  listen {{ public_http_ssl_port }} ssl http2;
  server_name www.{{ ep_public_hostname }};
  return 301 $scheme://{{ ep_public_hostname }}$request_uri;
}

server {
  listen {{ public_http_ssl_port }} ssl http2;
  listen [::]:{{ public_http_ssl_port }} ssl http2;

  server_name {{ ep_public_hostname }};
  # charset utf-8;
  client_max_body_size 10m;

  root /var/www/{{ ep_public_hostname }}/htdocs;

  ssl_certificate  /etc/letsencrypt/live/{{ ep_public_hostname }}/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/{{ ep_public_hostname }}/privkey.pem;

  ssl_trusted_certificate  /etc/letsencrypt/live/{{ ep_public_hostname }}/chain.pem;

  include snippet-ssl.conf;

  access_log /var/log/nginx/{{ ep_public_hostname }}.access_log main;
  error_log /var/log/nginx/{{ ep_public_hostname }}.error_log info;

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # enable this if and only if you use HTTPS
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://varnish/VirtualHostBase/https/{{ ep_public_hostname }}:{{ public_http_ssl_port }}/z_ep/ep/VirtualHostRoot/;

    proxy_intercept_errors on;
  }

  error_page 500 502 503 504 /502.html;

  location ~* /google(.*) {}
  location ~* /yandex_(.*) {}

  location ~ /stat/.* {
    auth_basic "closed site";
    auth_basic_user_file /etc/nginx/nginx.ep.passwd;
  }
  location ~ /awstats/* {}

  location /.well-known {
    alias /var/www/{{ ep_public_hostname }}/.well-known;
  }
}
