upstream cpz_backend {
  server unix:{{ cpz_backend_socket }} fail_timeout=0;
}

# See https://mozilla.github.io/server-side-tls/ssl-config-generator/
server {
  listen {{ cpz_http_port }};
  server_name {{ cpz_http_hostname }} www.{{ cpz_http_hostname }};
  return 301 https://{{ cpz_http_hostname }}$request_uri;
}

server {
  listen {{ cpz_http_ssl_port }} ssl http2;
  server_name www.{{ cpz_http_hostname }};
  return 301 $scheme://{{ cpz_http_hostname }}$request_uri;
}

server {
  listen {{ cpz_http_ssl_port }} ssl http2 default_server;
  listen [::]:{{ cpz_http_ssl_port }} ssl http2 default_server;

  server_name {{ cpz_http_hostname }};
  # charset utf-8;
  client_max_body_size 48m;

  root /var/www/{{ cpz_http_hostname }}/htdocs;

  ssl_certificate  /etc/letsencrypt/live/cpositive.ru/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/cpositive.ru/privkey.pem;

  ssl_trusted_certificate  /etc/letsencrypt/live/cpositive.ru/chain.pem;

  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  # ssl_dhparam /path/to/dhparam.pem;

  # intermediate configuration. tweak to your needs.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  resolver 127.0.0.1;

  access_log /var/log/nginx/{{ cpz_http_hostname }}.access_log main;
  error_log /var/log/nginx/{{ cpz_http_hostname }}.error_log info;

  proxy_cache_valid 1h;
  proxy_cache one;
  proxy_intercept_errors on;

  location / {
      rewrite ^/favicon.ico$ /static/favicon.ico permanent;
      try_files $uri @proxy;
  }

  location @proxy {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # enable this if and only if you use HTTPS
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://cpz_backend;

    proxy_cache_bypass   $cookie_nocache  $arg_nocache$arg_comment;
    proxy_cache_valid 1h;
    proxy_cache one;
    proxy_intercept_errors on;
  }

  error_page 500 502 503 504 /502.html;

  location /admin {
    return 403;
  }

  location /static {
    alias {{ backend_static_dir }};
    aio on;
    directio 512;
    output_buffers 1 128k;

    expires 30d;
    access_log off;
  }

{% if cpz_http_hostname == 'cpositive.ru' %}

  location /downloads {
    alias /opt/Sites/downloads;
    autoindex on;

    aio on;
    directio 512;
    output_buffers 1 128k;
  }

  location /files {
    alias /opt/Sites/files;

    aio on;
    directio 512;
    output_buffers 1 128k;
  }

{% endif %}
}
